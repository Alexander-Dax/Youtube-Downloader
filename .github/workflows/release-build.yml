name: Build and Release EXE

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    strategy:
      matrix:
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest']

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install certifi  # Ensure certifi is installed

    - name: Locate certifi CA bundle
      id: certifi
      run: |
        echo "CERTIFI_CA_BUNDLE=$(python -m certifi)" >> $GITHUB_ENV

    - name: Build application
      shell: bash
      run: |
        echo "CERTIFI_CA_BUNDLE: $CERTIFI_CA_BUNDLE"
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          pyinstaller --noconsole --onefile --add-data "%CERTIFI_CA_BUNDLE$;certifi" --name video_downloader main.py
          mv dist/video_downloader.exe video_downloader_windows.exe
        elif [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          pyinstaller --noconsole --onefile --add-data "$CERTIFI_CA_BUNDLE:certifi" --name video_downloader main.py
          mv dist/video_downloader video_downloader_linux
        elif [ "${{ matrix.os }}" == "macos-latest" ]; then
          pyinstaller --noconsole --onefile --add-data "$CERTIFI_CA_BUNDLE:certifi" --name video_downloader main.py
          mv dist/video_downloader video_downloader_macos
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: video_downloader_${{ matrix.os }}
        path: |
          video_downloader_windows.exe
          video_downloader_linux
          video_downloader_macos


  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: video_downloader_windows-latest

    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: video_downloader_ubuntu-latest

    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: video_downloader_macos-latest

    - name: Publish Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: |
          video_downloader_windows.exe,
          video_downloader_linux,
          video_downloader_macos
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
        releaseName: Release ${{ github.ref_name }}
        body: |
          A new release is available.
          - Includes builds for Windows, Linux, and macOS.
